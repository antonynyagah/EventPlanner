{"ast":null,"code":"var _jsxFileName = \"/Users/antonynyagah/Desktop/Event-Booker/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport './Auth.css';\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedin: true\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prev => {\n        return {\n          isLoggedin: !prevState.isLoggedin\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const email = this.emailElement.current.value;\n      const password = this.passwordElement.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n            query{\\n                login(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\")\\n                {\\n                    userId\\n                    token\\n                    tokenExpiration\\n                }\\n            }\\n        \\n        \")\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: \"\\n        mutation {\\n            createUser(userInput: {email:\\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\"})\\n                {\\n                    _id\\n                    email\\n                }\\n            }\\n        \")\n        };\n      }\n\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status != 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.emailElement = React.createRef();\n    this.passwordElement = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: switchModeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" Switch to\", this.state.isLoggedin ? 'Signup:' : 'Login')));\n  }\n\n}\n\nexport default AuthPage;","map":{"version":3,"sources":["/Users/antonynyagah/Desktop/Event-Booker/frontend/src/pages/Auth.js"],"names":["React","Component","AuthPage","constructor","props","state","isLoggedin","switchModeHandler","setState","prev","prevState","submitHandler","event","preventDefault","email","emailElement","current","value","password","passwordElement","trim","length","requestBody","query","isLogin","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","console","log","catch","err","createRef","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Auth.css';\n\nclass AuthPage extends Component {\n\nstate = {\n    isLoggedin :true\n};\n\n    constructor(props){\n        super(props);\n        this.emailElement= React.createRef();\n        this.passwordElement= React.createRef();\n\n    }\nswitchModeHandler=()=>\n{\n    this.setState(prev=> {\n        return {isLoggedin: !prevState.isLoggedin}; \n    })\n}\n\nsubmitHandler =(event) =>{\n    event.preventDefault();\n    const email= this.emailElement.current.value;\n    const password= this.passwordElement.current.value;\n\n    if (email.trim().length === 0 || password.trim().length ===0){\n        return;\n    }\n\n    let requestBody ={\n        query:`\n            query{\n                login(email: \"${email}\", password: \"${password}\")\n                {\n                    userId\n                    token\n                    tokenExpiration\n                }\n            }\n        \n        `\n    };\n    if (!this.state.isLogin){\n     requestBody = {\n       query: `\n        mutation {\n            createUser(userInput: {email:\"${email}\", password: \"${password}\"})\n                {\n                    _id\n                    email\n                }\n            }\n        `\n    };    \n    }\n \n    fetch('http://localhost:8000/graphql',{\n        method: 'POST',\n        body:JSON.stringify(requestBody),\n        headers:{\n            'Content-Type':'application/json'\n        }\n    }) \n        .then(res =>{\n            if  (res.status!== 200 && res.status !=201){\n                throw new Error('Failed!');\n            }\n            return res.json();\n        })\n        .then(resData =>{\n            console.log(resData);\n        })\n        .catch(err =>{\n            console.log(err);\n        })\n};\n    render(){\n        return (\n        <form className=\"auth-form\" onSubmit={this.submitHandler} >\n            <div className=\"form-control\">\n                <label htmlFor =\"email\">Email</label>\n                <input type=\"email\" id=\"email\" ref={this.emailElement}/> \n            </div>\n        \n         \n         <div className=\"form-control\">\n             <label htmlFor =\"password\">Password</label>\n             <input type=\"password\" id=\"password\" ref={this.passwordElement}/> \n         </div>\n\n         <div className=\"form-actions\">\n             <button type=\"submit\">Submit</button>\n             <button type=\"button\"onClick={switchModeHandler}> Switch to{this.state.isLoggedin ? 'Signup:':'Login'\n            }</button>\n             \n         </div>\n\n     </form>\n        );\n    }\n\n}\nexport default AuthPage;"]},"metadata":{},"sourceType":"module"}